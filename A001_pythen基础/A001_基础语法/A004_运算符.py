""" Python 中包含多种类型的运算符,以下是完整分类及说明:

1.算术运算符:
+:加法,用于数值相加或者字符串连接。
-:减法,用于数值相减。
*:乘法,用于数值相乘或重复字符串。
/:除法,得到的是一个浮点数结果。
%:取模运算符,返回除法的余数。
//:整数除法,返回商的整数部分,无小数点。
**:幂运算符,返回第一个操作数的第二个操作数次方。

2.赋值运算符:
=:简单赋值,将右侧值赋予左侧变量。
+=、-=、*=、/=、%=, //=, **=:复合赋值运算符,如 x += 3 相当于 x = x + 3,分别对应加法、减法、乘法、除法、取模和整除后的赋值。

3.比较运算符:
==:等于,判断两个值是否相等。
!=:不等于,判断两个值是否不相等。
<:小于,判断左边的值是否小于右边的值。
>:大于,判断左边的值是否大于右边的值。
<=:小于等于,判断左边的值是否小于等于右边的值。
>=:大于等于,判断左边的值是否大于等于右边的值。

4.逻辑运算符:
and:逻辑与,两边都为真则结果为真。
or:逻辑或,两边有一个为真则结果为真。
not:逻辑非,对布尔值进行取反。

5.位运算符:
&:按位与,对二进制数逐位进行“与”运算。1.
|:按位或,对二进制数逐位进行“或”运算。
^:按位异或,对二进制数逐位进行“异或”运算。
<<:左移运算符,将二进制数向左移动指定的位数。
>>:右移运算符,将二进制数向右移动指定的位数。
~:按位取反,对一个整数进行二进制位上的翻转,即将0变成1,1变成0。

6.成员运算符: 
in:判断某个值是否在序列（如列表、元组、字符串或集合）中。    你可以使用 in 检测一个对象是否是另一个对象的成员。 'banana' in ['apple', 'banana', 'cherry']
not in:判断某个值是否不在序列中。

7.身份运算符:
is:判断两个对象是否为同一个对象引用,即是否指向内存中的同一块地址。
is not:判断两个对象是否不是同一个对象引用。 """